name: (CI) o(f) the issu(e) trigge(r)ed by the (is)sue - CIFERIS

on:
  issues:
    types:
      - opened
      - edited
      - reopened
  workflow_dispatch:
env:
  ISSUE_NUMBER: ${{ github.event.issue.number }}

jobs:

  fetch_issue:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'CIFERIS')

    steps:

      - name: 'ðŸ§° Checkout'
        uses: actions/checkout@v4

      - name: 'Fetch GHDL issue'
        run: |
          gh issue view $ISSUE_NUMBER > issue.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'ðŸ“¤ Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: issue_fetch_text
          path: ./issue.txt

  extract_code_and_top:
    runs-on: ubuntu-latest
    needs: fetch_issue
    if: contains(github.event.issue.labels.*.name, 'CIFERIS')

    steps:

      - name: 'ðŸ§° Checkout'
        uses: actions/checkout@v4

      - name: 'Download the issue'
        uses: actions/download-artifact@v4
        with:
          name: issue_fetch_text
      - name: 'Extract code and top'
        run: |
          ./src/HDL-code-blocks-extractor.sh
          ./src/SH-code-block-extractor.sh
          ./src/top_parser.sh
      - name: 'ðŸ“¤ Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: code_and_top
          path: |
            ./src/*.vhd
            ./src/top.txt

  run_HDL_code-blocks_with_ghdl_all_backends_24_04_std_08:
    runs-on: ubuntu-latest
    needs: extract_code_and_top
    if: contains(github.event.issue.labels.*.name, 'CIFERIS')

    steps:

      - name: 'ðŸ§° Checkout'
        uses: actions/checkout@v4

      - name: 'Download code and top'
        uses: actions/download-artifact@v4
        with:
          name: code_and_top
      - name: 'Build container and run the simulation'
        run: |
          top=$(cat top.txt)
          echo "The parsed top name is: <$top>"
          podman pull docker.io/ghdl/ghdl:6.0.0-dev-mcode-ubuntu-24.04
          podman pull docker.io/ghdl/ghdl:6.0.0-dev-llvm-ubuntu-24.04
          podman pull docker.io/ghdl/ghdl:6.0.0-dev-llvm-jit-ubuntu-24.04
          podman pull docker.io/ghdl/ghdl:6.0.0-dev-gcc-ubuntu-24.04
          podman run --rm -tv $(pwd):/wrk:Z -w /wrk ghdl/ghdl:6.0.0-dev-mcode-ubuntu-24.04 sh -c "ghdl -i --std=08 *.vhd && ghdl -m --std=08 $top && ghdl -r --std=08 $top --vcd=wave_mcode_std_08.vcd" 
          podman run --rm -tv $(pwd):/wrk:Z -w /wrk ghdl/ghdl:6.0.0-dev-llvm-ubuntu-24.04 sh -c "ghdl -i --std=08 *.vhd && ghdl -m --std=08 $top && ghdl -r --std=08 $top --vcd=wave_llvm_std_08.vcd" 
          podman run --rm -tv $(pwd):/wrk:Z -w /wrk ghdl/ghdl:6.0.0-dev-llvm-jit-ubuntu-24.04 sh -c "ghdl -i --std=08 *.vhd && ghdl -m --std=08 $top && ghdl -r --std=08 $top --vcd=wave_llvm_jit_std_08.vcd" 
          podman run --rm -tv $(pwd):/wrk:Z -w /wrk ghdl/ghdl:6.0.0-dev-gcc-ubuntu-24.04 sh -c "ghdl -i --std=08 *.vhd && ghdl -m --std=08 $top && ghdl -r --std=08 $top --vcd=wave_gcc_std_08.vcd" 
      - name: 'ðŸ“¤ Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: sim_waveforms
          path: |
            ./*.vcd
